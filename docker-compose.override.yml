services:

  # Local adapters are available on their ports, but also available on:
  # http://api.localhost.myapp.com: backend
  # etc. To enable it, update .env, set:
  # DOMAIN=localhost.myapp.com
  proxy:
    image: traefik:3.5.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8090:8080"
    # Duplicate the command from docker-compose.yml to add --api.insecure=true
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker adapters
      - --providers.docker
      # Add a constraint to only use adapters with the label for this stack
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
      # Do not expose all Docker adapters, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on port 80
      - --entrypoints.http.address=:80
      # Create an entrypoint "https" listening on port 443
      - --entrypoints.https.address=:443
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable debug logging for local development
      - --log.level=DEBUG
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      - traefik.constraint-label=traefik-public
      # Dummy https-redirect middleware that doesn't really redirect, only to
      # allow running it locally
      - traefik.http.middlewares.https-redirect.contenttype.autodetect=false
    networks:
      - traefik-public
      - default

  db:
    restart: "no"
    ports:
      - "5432:5432"

  adminer:
    restart: "no"
    ports:
      - "5080:5080"

  api:
    restart: "no"
    ports:
      - "8000:8000"
    build:
      target: dev
    develop:
      watch:
        - path: .
          action: sync
          target: /app
          ignore:
            - .venv
        - path: ./pyproject.toml
          action: rebuild
    environment:
      SMTP_HOST: "mailcatcher"
      SMTP_PORT: "1025"
      SMTP_TLS: "false"
      EMAILS_FROM_EMAIL: "noreply@example.com"
      # Enables autoreload.
      APP_RELOAD: "True"

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"

  taskiq-worker:
    restart: "no"
    ports:
      - "8081:8000"
    volumes:
      # Adds current directory as volume.
      - .:/app/src/
    command:
      - taskiq
      - worker
      - app.tkq:broker
      - --reload

  redis:
    restart: "no"
    ports:
      - "6379:6379"

  rmq:
    restart: "no"
    ports:
      - "5672:5672"

  kafka:
    restart: "no"
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: false
